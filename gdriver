#!/usr/bin/env ruby
require 'google/apis/drive_v3'
require 'googleauth'
require 'googleauth/stores/file_token_store'

require 'fileutils'
require 'thor'

#Google-Drive Variables
OOB_URI = 'urn:ietf:wg:oauth:2.0:oob'
APPLICATION_NAME = 'Drive API Ruby'
CLIENT_SECRETS_PATH = 'client_secret.json'
CREDENTIALS_PATH = File.join(Dir.home, '.credentials',
                             "drive-ruby-quickstart.yaml")
SCOPE = Google::Apis::DriveV3::AUTH_DRIVE_FILE

class Drive
  def self.authorize
  	FileUtils.mkdir_p(File.dirname(CREDENTIALS_PATH))

  	client_id = Google::Auth::ClientId.from_file(CLIENT_SECRETS_PATH)
  	token_store = Google::Auth::Stores::FileTokenStore.new(file: CREDENTIALS_PATH)
  	authorizer = Google::Auth::UserAuthorizer.new(
		client_id, SCOPE, token_store)
  	user_id = 'default'
  	credentials = authorizer.get_credentials(user_id)
  	if credentials.nil?
    	url = authorizer.get_authorization_url(
      	base_url: OOB_URI)
    	puts "Open the following URL in the browser and enter the " +
         	"resulting code after authorization"
    	puts url
    	puts 'Your authentication code: (Press enter after typing)'
    	code = STDIN.gets.chomp
    	credentials = authorizer.get_and_store_credentials_from_code(
      	user_id: user_id, code: code, base_url: OOB_URI)
  	end
  	credentials
  end
end



class Gdriver < Thor

  desc "auth","Authorize with google"
  def auth
  	# Initialize the API
	service = Google::Apis::DriveV3::DriveService.new
	service.client_options.application_name = APPLICATION_NAME
	service.authorization = Drive.authorize
	# List the 10 most recently modified files.
	response = service.list_files(page_size: 10,
	                              fields: 'nextPageToken, files(id, name)')
	puts 'Files:'
	puts 'No files found' if response.files.empty?
	response.files.each do |file|
	  puts "#{file.name} (#{file.id})"
	end
  end

  desc "up FILENAME","Upload file to google drive"
  def up
  	tmp = Tempfile.new('foo')
	tmp.write("hello world")

	# Initialize the API
	service = Google::Apis::DriveV3::DriveService.new
	service.client_options.application_name = APPLICATION_NAME
	service.authorization = Drive.authorize

	# Upload file
	response = service.create_file(upload_source: tmp)
	puts response

	# media = Google::APIClient::UploadIO.new(tmp, 'text/plain', 'foo.txt')
	# file = drive.files.insert.request_schema.new({
	#   'title' => 'My document',
	#   'description' => 'A test document',
	#   'mimeType' => 'text/plain'
	# })
	# result = client.execute(
	#   :api_method => drive.files.insert,
	#   :body_object => file,
	#   :media => media,
	#   :parameters => {
	#     'uploadType' => 'multipart',
	#     'alt' => 'json'})
  end
end

Gdriver.start(ARGV)
